/* .box {
  width: 100px;
  height: 100px;
  background-color: orange;
  transition-duration: 2s; /*2초에 시간동안 변형하겠다*/
/*}

.box:hover {
  width: 200px;
  height: 300px;
}
.box:active {
  background-color: #f00;
} */
/* 여기까지  */

#graph {
  width: 610px;
  border: 3px solid#000;
}
.bar {
  width: 10px;
  height: 50px;
  background-color: orange;
  margin: 5px;
  transition-duration: 3s;
  /* 트렌지션 속성은 반드시 시작하는 원본값에 적용해줘야 한다
  도착값에 주면 커서를 올렸을때는 적응하지만 다시 커서가 벗어나면 안먹는다 */
}
/* #graph:hover > .bar {
  width: 600px;
} */

/* 시차를 둔다 */
#graph:hover > .bar:nth-child(1) {
  transition-delay: 0s;
  transition-timing-function: linear; /*가감속을 주는 기능 */
  background-color: red;
  width: 100px;
}
#graph:hover > .bar:nth-child(2) {
  transition-delay: 1s;
  transition-timing-function: ease;
  background-color: blue;
  width: 300px;
}
#graph:hover > .bar:nth-child(3) {
  transition-delay: 2s;
  transition-timing-function: ease-in;
  background-color: green;
  width: 400px;
}
#graph:hover > .bar:nth-child(4) {
  transition-delay: 3s;
  transition-timing-function: ease-in-out;
  background-color: yellow;
  width: 200px;
}
#graph:hover > .bar:nth-child(5) {
  transition-delay: 4s;
  transition-timing-function: ease-out;
  background-color: pink;
  width: 400px;
}
/* transition-timing-function: 에니메이션의 가.감속을 결정해주는 요소
1. ease: 시작, 끝 지점을 느리게, 중간지점은 빠르게 
2. linear: 가,감속이 전혀 없이 정속으로
3. ease-in: 시작만 느리게
4. ease-out: 끝에서만 느리게
5. ease-in-out: 시작, 끝 지점은 느리게, 중간지점은 빠르게
(ease와 비교했을 때 시작 지점이 살짝 더 느림)
사이트:cubic-bezier */
